{"ast":null,"code":"// @ is an alias to /src\nimport EventCard from '@/components/EventCard.vue';\nimport EventService from '@/services/EventService.js';\nimport { watchEffect } from '@vue/runtime-core';\nexport default {\n  name: 'EventListView',\n  props: {\n    page: {\n      type: Number,\n      required: true\n    },\n    morepage: {\n      type: Number,\n      required: true\n    }\n  },\n  components: {\n    EventCard\n  },\n\n  data() {\n    return {\n      events: null,\n      totalEvents: 0 // <--- Added this to store totalEvents\n\n    };\n  },\n\n  created() {\n    watchEffect(() => {\n      EventService.getEvents(this.morepage, this.page).then(response => {\n        this.events = response.data;\n        this.totalEvents = response.headers['x-total-count']; // <--- Store it\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  },\n\n  computed: {\n    hasNextPage() {\n      //First, calculate total pages\n      let totalPages = Math.ceil(this.totalEvents / this.morepage); // 2 is events per pages.\n      //Then check to see if the current page is less than the total pages.\n\n      return this.page < totalPages;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkCA;AACA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,eAAe;EACbC,IAAI,EAAE,eADO;EAEbC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MADF;MAEJC,QAAQ,EAAE;IAFN,CADD;IAKLC,QAAQ,EAAE;MACRH,IAAI,EAAEC,MADE;MAERC,QAAQ,EAAE;IAFF;EALL,CAFM;EAYbE,UAAU,EAAE;IACVV;EADU,CAZC;;EAebW,IAAI,GAAG;IACL,OAAO;MACLC,MAAM,EAAE,IADH;MAELC,WAAW,EAAE,CAFR,CAEU;;IAFV,CAAP;EAID,CApBY;;EAqBbC,OAAO,GAAG;IACRZ,WAAW,CAAC,MAAM;MAChBD,YAAY,CAACc,SAAb,CAAuB,KAAKN,QAA5B,EAAsC,KAAKJ,IAA3C,EACGW,IADH,CACSC,QAAD,IAAc;QAClB,KAAKL,MAAL,GAAcK,QAAQ,CAACN,IAAvB;QACA,KAAKE,WAAL,GAAmBI,QAAQ,CAACC,OAAT,CAAiB,eAAjB,CAAnB,CAFkB,CAEmC;MACtD,CAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;QAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD,CAPH;IAQD,CATU,CAAX;EAUD,CAhCY;;EAiCbG,QAAQ,EAAE;IACRC,WAAW,GAAG;MACZ;MACA,IAAIC,UAAS,GAAIC,IAAI,CAACC,IAAL,CAAU,KAAKd,WAAL,GAAmB,KAAKJ,QAAlC,CAAjB,CAFY,CAEiD;MAE7D;;MACA,OAAO,KAAKJ,IAAL,GAAYoB,UAAnB;IACF;;EAPQ;AAjCG,CAAf","names":["EventCard","EventService","watchEffect","name","props","page","type","Number","required","morepage","components","data","events","totalEvents","created","getEvents","then","response","headers","catch","error","console","log","computed","hasNextPage","totalPages","Math","ceil"],"sourceRoot":"","sources":["/Users/intouchkurwong/Documents/FileOfWorks/SE Assignments/953331 Compo-Based Software dev/Lab04-5/src/views/EventListView.vue"],"sourcesContent":["<template>\n  <h1>Events For Good</h1>\n  <div class=\"events\">\n    <EventCard\n      v-for=\"event in events\"\n      :key=\"event.id\"\n      :event=\"event\"\n    ></EventCard>\n    <div class=\"pagination\">\n      <router-link\n        id=\"page-prev\"\n        :to=\"{ name: 'EventList', query: { morepage: morepage - 1 } }\"\n        rel=\"prev\"\n        v-if=\"page != 1\"\n      >\n        Prev Page</router-link\n      >\n\n      <router-link\n        id=\"page-next\"\n        :to=\"{ name: 'EventList', query: { morepage: morepage + 1 } }\"\n        rel=\"next\"\n        v-if=\"hasNextPage\"\n      >\n        Next Page</router-link\n      >\n    </div>\n    <router-link :to=\"{ name: 'EventList', query: { page: page + 1 } }\">\n      Add data</router-link\n    >\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport EventCard from '@/components/EventCard.vue'\nimport EventService from '@/services/EventService.js'\nimport { watchEffect } from '@vue/runtime-core'\nexport default {\n  name: 'EventListView',\n  props: {\n    page: {\n      type: Number,\n      required: true\n    },\n    morepage: {\n      type: Number,\n      required: true\n    }\n  },\n  components: {\n    EventCard\n  },\n  data() {\n    return {\n      events: null,\n      totalEvents: 0 // <--- Added this to store totalEvents\n    }\n  },\n  created() {\n    watchEffect(() => {\n      EventService.getEvents(this.morepage, this.page)\n        .then((response) => {\n          this.events = response.data\n          this.totalEvents = response.headers['x-total-count'] // <--- Store it\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    })\n  },\n  computed: {\n    hasNextPage() {\n      //First, calculate total pages\n      let totalPages = Math.ceil(this.totalEvents / this.morepage) // 2 is events per pages.\n\n      //Then check to see if the current page is less than the total pages.\n      return this.page < totalPages\n    }\n  }\n}\n</script>\n<style scoped>\n.events {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.pagination {\n  display: flex;\n  width: 290px;\n}\n.pagination a {\n  flex: 1;\n  text-decoration: none;\n  color: #2c3e50;\n}\n\n#page-prev {\n  text-align: left;\n}\n\n#page-next {\n  text-align: right;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}