{"ast":null,"code":"import EventService from '@/services/EventService.js';\nimport { watchEffect } from '@vue/runtime-core';\nexport default {\n  data() {\n    return {\n      events: null\n    };\n  },\n\n  created() {\n    watchEffect(() => {\n      EventService.getEventsPassenger().then(response => {\n        this.events = response.data;\n        this.totalEvents = response.headers['x-total-count']; // <--- Store it\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  },\n\n  props: ['event']\n};","map":{"version":3,"mappings":"AAeA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,MAAM,EAAE;IADH,CAAP;EAGD,CALY;;EAMbC,OAAO,GAAG;IACRH,WAAW,CAAC,MAAM;MAChBD,YAAY,CAACK,kBAAb,GACGC,IADH,CACSC,QAAD,IAAc;QAClB,KAAKJ,MAAL,GAAcI,QAAQ,CAACL,IAAvB;QACA,KAAKM,WAAL,GAAmBD,QAAQ,CAACE,OAAT,CAAiB,eAAjB,CAAnB,CAFkB,CAEmC;MACtD,CAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;QAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD,CAPH;IAQD,CATU,CAAX;EAUD,CAjBY;;EAkBbG,KAAK,EAAE,CAAC,OAAD;AAlBM,CAAf","names":["EventService","watchEffect","data","events","created","getEventsPassenger","then","response","totalEvents","headers","catch","error","console","log","props"],"sourceRoot":"","sources":["/Users/intouchkurwong/Documents/FileOfWorks/SE Assignments/953331 Compo-Based Software dev/Lab04-5/src/views/event/EventDetailView.vue"],"sourcesContent":["<template>\n  <div v-for=\"passenger in events\" :key=\"passenger.id\">\n    <div v-for=\"event in passenger.data\" :key=\"event.id\">\n      <h3>ID: {{ event._id }}</h3>\n      <h3>Name: {{ event.name }}</h3>\n      <div v-for=\"airline in event.airline\" :key=\"airline.id\">\n        <p>Airline ID: {{ airline.id }}</p>\n        <p>Airline Name: {{ airline.name }}</p>\n        <p>Country: {{ airline.country }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport EventService from '@/services/EventService.js'\nimport { watchEffect } from '@vue/runtime-core'\nexport default {\n  data() {\n    return {\n      events: null\n    }\n  },\n  created() {\n    watchEffect(() => {\n      EventService.getEventsPassenger()\n        .then((response) => {\n          this.events = response.data\n          this.totalEvents = response.headers['x-total-count'] // <--- Store it\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    })\n  },\n  props: ['event']\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}