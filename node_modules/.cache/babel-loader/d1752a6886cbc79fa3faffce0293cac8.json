{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  id: \"nav\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Passenger \");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" Airline \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return $data.events ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_router_link, {\n    to: {\n      name: 'EventDetails',\n      params: {\n        id: $props.id\n      }\n    }\n  }, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"to\"]), _createVNode(_component_router_link, {\n    to: {\n      name: 'EventRegister',\n      params: {\n        id: $props.id\n      }\n    }\n  }, {\n    default: _withCtx(() => [_hoisted_4]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"to\"])]), _createVNode(_component_router_view, {\n    events: $data.events\n  }, null, 8\n  /* PROPS */\n  , [\"events\"])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;EAESA,EAAE,EAAC;;;iDACsD;;iDAGC;;;;;;;SALtDC,8BAAXC,oBAUM,KAVN,EAUMC,UAVN,EAUM,CATJC,oBAOM,KAPN,cAOM,CANJC,aAEcC,sBAFd,EAEc;IAFAC,EAAE;MAAAC;MAAAC;QAAAT,IAAoCU;MAApC;IAAA;EAEF,CAFd;sBAA4D,MAE5D;;;;GAFA;;EAAA,SAMI,EAHJL,aAEcC,sBAFd,EAEc;IAFAC,EAAE;MAAAC;MAAAC;QAAAT,IAAqCU;MAArC;IAAA;EAEF,CAFd;sBAA6D,MAE7D;;;;GAFA;;EAAA,SAGI,CAPN,CASI,EADJL,aAAgCM,sBAAhC,EAAgC;IAAlBC,MAAM,EAAEX;EAAU,CAAhC,EAA4B,IAA5B,EAA4B;EAAA;EAA5B,EAA4B,UAA5B,CACI,CAVN","names":["id","$data","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_router_link","to","name","params","$props","_component_router_view","events"],"sourceRoot":"","sources":["/Users/intouchkurwong/Documents/FileOfWorks/SE Assignments/953331 Compo-Based Software dev/Lab04-5/src/views/event/EventLayoutView.vue"],"sourcesContent":["<template>\n  <div v-if=\"events\">\n    <div id=\"nav\">\n      <router-link :to=\"{ name: 'EventDetails', params: { id } }\">\n        Passenger\n      </router-link>\n      <router-link :to=\"{ name: 'EventRegister', params: { id } }\">\n        Airline\n      </router-link>\n    </div>\n    <router-view :events=\"events\" />\n  </div>\n</template>\n\n<script>\nimport EventService from \"@/services/EventService.js\";\nexport default {\n  props: [\"id\"],\n  data() {\n    return {\n      event: null,\n      events: null,\n    };\n  },\n  created() {\n    EventService.getEventsPass()\n      .then((response) => {\n        let pass = response.data;\n        pass.forEach((element) => {\n          element.data;\n          this.event = element.data;\n        });\n        for (let index = 0; index < this.event.length; index++) {\n          if (this.event[index]._id == this.id) {\n            this.events = this.event[index];\n          }\n        }\n        if (this.events == null) {\n          this.$router.push({\n            name: \"404Resource\",\n            params: { resource: this.id },\n          });\n        }\n      })\n      .catch((error) => {\n        if (error.response && error.response.status == 404) {\n          this.$router.push({\n            name: \"404Resource\",\n            params: { resource: this.id },\n          });\n        } else {\n          this.$router.push({ name: \"NetworkError\" });\n        }\n      });\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}